<div class="product-grid-section">
  <div class="grid">
    {% for block in section.blocks %}
      {% assign product = block.settings.product %}
      {% if product != blank %}
        <div class="grid-item" data-product="{{ product | json }}">
          <img src="{{ product.featured_image | image_url: width: 400 }}" alt="{{ product.title }}" width="400" height="400" />
          <h3>{{ product.title }}</h3>
          <p>{{ product.price | money }}</p>
          <button class="open-popup">+</button>
        </div>
      {% endif %}
    {% endfor %}
  </div>

  <!-- Popup -->
  <div class="popup" id="product-popup">
    <div class="popup-content">
      <span class="close">&times;</span>
      <img id="popup-image" src="" alt="" />
      <h2 id="popup-title"></h2>
      <p id="popup-price"></p>
      <p id="popup-description"></p>
      <form id="popup-form">
        <label for="variant-select">Variants:</label>
        <select id="variant-select"></select>
        <button type="submit" id="add-to-cart">Add to Cart</button>
      </form>
    </div>
  </div>
</div>

<style>
  .grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    gap: 1.5rem;
  }
  .grid-item {
    border: 1px solid #ddd;
    padding: 1rem;
    text-align: center;
    background: #fff;
    position: relative;
  }
  .open-popup {
    position: absolute;
    top: 10px;
    right: 10px;
    background: #eee;
    border: none;
    cursor: pointer;
    font-size: 1.2rem;
  }
  .popup {
    display: none;
    position: fixed;
    z-index: 1000;
    background: rgba(0, 0, 0, 0.6);
    top: 0; left: 0;
    width: 100%; height: 100%;
    align-items: center;
    justify-content: center;
  }
  .popup-content {
    background: white;
    padding: 2rem;
    max-width: 500px;
    width: 90%;
    position: relative;
  }
  .popup-content img {
    width: 100px;
    height: auto;
    display: block;
  }
  .popup-content .close {
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 1.5rem;
    cursor: pointer;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const popup = document.getElementById("product-popup");
    const popupImage = document.getElementById("popup-image");
    const popupTitle = document.getElementById("popup-title");
    const popupPrice = document.getElementById("popup-price");
    const popupDesc = document.getElementById("popup-description");
    const variantSelect = document.getElementById("variant-select");
    const addToCartBtn = document.getElementById("popup-form");
    const closeBtn = document.querySelector(".popup .close");

    document.querySelectorAll(".open-popup").forEach(btn => {
      btn.addEventListener("click", (e) => {
        const item = e.target.closest(".grid-item");
        const product = JSON.parse(item.dataset.product);
        popup.style.display = "flex";
        popupImage.src = product.featured_image.url;
        popupTitle.textContent = product.title;
        popupPrice.textContent = Shopify.formatMoney(product.price, "{{ shop.money_format }}");
        popupDesc.textContent = product.description;

        variantSelect.innerHTML = "";
        product.variants.forEach(variant => {
          const opt = document.createElement("option");
          opt.value = variant.id;
          opt.textContent = variant.title;
          opt.dataset.color = variant.option1;
          opt.dataset.size = variant.option2;
          variantSelect.appendChild(opt);
        });

        addToCartBtn.onsubmit = function (event) {
          event.preventDefault();
          const variantId = variantSelect.value;
          const selected = variantSelect.options[variantSelect.selectedIndex];
          const color = selected.dataset.color;
          const size = selected.dataset.size;

          fetch("/cart/add.js", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ id: variantId, quantity: 1 })
          });

          // Check for Black + Medium
          if (color === "Black" && size === "Medium") {
            // Replace with Soft Winter Jacket's actual variant ID
            fetch("/cart/add.js", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ id: dark-winter-jacket, quantity: 1 })
            });
          }

          popup.style.display = "none";
        };
      });
    });

    closeBtn.addEventListener("click", () => {
      popup.style.display = "none";
    });

    window.addEventListener("click", (e) => {
      if (e.target === popup) popup.style.display = "none";
    });
  });
</script>

{% schema %}
{
  "name": "Grid Section",
  "settings": [],
  "blocks": [
    {
      "type": "product",
      "name": "Product",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Select Product"
        }
      ]
    }
  ],
  "max_blocks": 6,
  "presets": [
    {
      "name": "Product Grid Section"
    }
  ]
}
{% endschema %}
